{"version":3,"sources":["Components/Clock/Clock.tsx","App.tsx","index.tsx"],"names":["normalizedDate","date","toUTCString","slice","Clock","timerIdClockValue","state","today","Date","this","window","setInterval","setState","prevState","console","info","prevProps","clockName","props","debug","clearInterval","className","React","Component","getRandomName","value","now","toString","App","timerIdClockName","hasClock","handleOnClick","handleOnContext","event","preventDefault","document","addEventListener","removeEventListener","ReactDOM","render","getElementById"],"mappings":"qNAUMA,EAAiB,SAACC,GAAD,OAAgBA,EAAKC,cAAcC,OAAO,IAAK,IAEzDC,EAAb,4MACEC,uBADF,IAGEC,MAAe,CACbC,MAAO,IAAIC,MAJf,uDAOE,WAA2B,IAAD,OACxBC,KAAKJ,kBAAoBK,OAAOC,aAAY,WAC1C,EAAKC,UAAS,SAAAC,GAAS,kCAAUA,GAAV,IAAqBN,MAAO,IAAIC,UAGvDM,QAAQC,KAAKf,EAAe,EAAKM,MAAMC,UACtC,OAbP,gCAgBE,SAAmBS,GAEbA,EAAUC,YAAcR,KAAKS,MAAMD,WAErCH,QAAQK,MAAR,uBAA8BH,EAAUC,UAAxC,eAAwDR,KAAKS,MAAMD,cApBzE,kCAwBE,WACEP,OAAOU,cAAcX,KAAKJ,qBAzB9B,oBA4BE,WACE,IAAQE,EAAUE,KAAKH,MAAfC,MACAU,EAAcR,KAAKS,MAAnBD,UAER,OACE,sBAAKI,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGJ,IAGF,YAED,sBAAMI,UAAU,cAAhB,SACGrB,EAAeO,YAzC1B,GAA2Be,IAAMC,W,MCRjC,SAASC,IACP,IAAMC,EAAQjB,KAAKkB,MAAMC,WAAWxB,OAAO,GAE3C,MAAM,SAAN,OAAgBsB,GAQX,IAAMG,EAAb,4MACEC,sBADF,IAGEvB,MAAe,CACbwB,UAAU,EACVb,UAAW,WALf,EAuBEc,cAAgB,WACd,EAAKnB,SAAS,CAAEkB,UAAU,KAxB9B,EA2BEE,gBAAkB,SAACC,GACjBA,EAAMC,iBAEN,EAAKtB,SAAS,CAAEkB,UAAU,KA9B9B,uDAQE,WAA2B,IAAD,OACxBrB,KAAKoB,iBAAmBnB,OAAOC,aAAY,WACzC,EAAKC,SAAS,CAAEK,UAAWO,QAC1B,MAEHW,SAASC,iBAAiB,QAAS3B,KAAKsB,eACxCI,SAASC,iBAAiB,cAAe3B,KAAKuB,mBAdlD,kCAiBE,WACEtB,OAAOU,cAAcX,KAAKoB,kBAC1BM,SAASE,oBAAoB,QAAS5B,KAAKsB,eAC3CI,SAASE,oBAAoB,cAAe5B,KAAKuB,mBApBrD,oBAiCE,WACE,MAAgCvB,KAAKH,MAA7BwB,EAAR,EAAQA,SAAUb,EAAlB,EAAkBA,UAElB,OACE,sBAAKI,UAAU,MAAf,UACE,6CAECS,GAAY,cAAC,EAAD,CAAOb,UAAWA,WAxCvC,GAAyBK,IAAMC,WCZ/Be,IAASC,OACP,cAAC,EAAD,IACAJ,SAASK,eAAe,W","file":"static/js/main.31b69200.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  clockName: string,\n};\n\ntype State = {\n  today: Date,\n};\n\nconst normalizedDate = (date: Date) => date.toUTCString().slice(-12, -4);\n\nexport class Clock extends React.Component<Props, State> {\n  timerIdClockValue: number | undefined;\n\n  state: State = {\n    today: new Date(),\n  };\n\n  componentDidMount(): void {\n    this.timerIdClockValue = window.setInterval(() => {\n      this.setState(prevState => ({ ...prevState, today: new Date() }));\n\n      // eslint-disable-next-line no-console\n      console.info(normalizedDate(this.state.today));\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Readonly<Props>)\n    : void {\n    if (prevProps.clockName !== this.props.clockName) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${prevProps.clockName} to ${this.props.clockName}`);\n    }\n  }\n\n  componentWillUnmount(): void {\n    window.clearInterval(this.timerIdClockValue);\n  }\n\n  render() {\n    const { today } = this.state;\n    const { clockName } = this.props;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {clockName}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {normalizedDate(today)}\n        </span>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Clock } from './Components/Clock/Clock';\nimport './App.scss';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  hasClock: boolean,\n  clockName: string,\n};\n\nexport class App extends React.Component<{}, State> {\n  timerIdClockName: number | undefined;\n\n  state: State = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  componentDidMount(): void {\n    this.timerIdClockName = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n\n    document.addEventListener('click', this.handleOnClick);\n    document.addEventListener('contextmenu', this.handleOnContext);\n  }\n\n  componentWillUnmount(): void {\n    window.clearInterval(this.timerIdClockName);\n    document.removeEventListener('click', this.handleOnClick);\n    document.removeEventListener('contextmenu', this.handleOnContext);\n  }\n\n  handleOnClick = () => {\n    this.setState({ hasClock: true });\n  };\n\n  handleOnContext = (event: MouseEvent) => {\n    event.preventDefault();\n\n    this.setState({ hasClock: false });\n  };\n\n  render() {\n    const { hasClock, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {hasClock && <Clock clockName={clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}